name: Testing, Linting, Vulnerability Checking

on:
  push:
    branches:
      - master

jobs:
  test:
    services:
      postgres:
        image: postgres:11.12
        env:
          POSTGRES_DB: random_quiz_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: psw
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432

    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction

      - name: Run pytest
        run: poetry run pytest --cov=random_quiz --showlocals --log-level=DEBUG tests/ --cov-fail-under=60

      - name: Run flake8
        run: poetry run flake8 random_quiz tests --count --show-source --statistics

      - name: Run bandit
        run: poetry run bandit -r random_quiz

